dnl Process this file with autoconf to create configure.
AC_PREREQ(2.53)
AC_INIT(ChangeLog)

dnl ==========================================================================
dnl                               Versioning              
dnl ==========================================================================

PANGO_REQUIRED_VERSION=1.0.4
LIBTHAI_REQUIRED_VERSION=0.1.1

dnl Initialize automake stuff
AM_INIT_AUTOMAKE(pango-libthai, 0.1.0)

AC_PROG_CC
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_MSG_CHECKING([for some Win32 platform])
case "$host" in
  *-*-mingw*|*-*-cygwin*)
    pango_platform_win32=yes
    ;;
  *)
    pango_platform_win32=no
    ;;
esac
AC_MSG_RESULT([$pango_platform_win32])
AM_CONDITIONAL(PLATFORM_WIN32, test "$pango_platform_win32" = "yes")

if test x$no_x = xyes ; then
  AC_MSG_WARN([X development libraries not found])
  have_x=false
else
  X_LIBS="$X_LIBS -L/usr/X11R6/lib -lX11"
  have_x=true
fi
AM_CONDITIONAL(HAVE_X, $have_x) 
AC_SUBST(X_LIBS)

#
# Checks for FreeType
#
FREETYPE_LIBS=
FREETYPE_CFLAGS=
have_freetype=false
AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
if test "x$FREETYPE_CONFIG" != "xno" ; then
  FREETYPE_CFLAGS=`$FREETYPE_CONFIG --cflags`
  FREETYPE_LIBS=`$FREETYPE_CONFIG --libs`

  pango_save_ldflags=$LDFLAGS
  LDFLAGS="$LDFLAGS $FREETYPE_LIBS"
  AC_CHECK_LIB(freetype, FT_New_Face, have_freetype=true, :)
  LDFLAGS=$pango_save_ldflags

  if $have_freetype ; then
    pango_save_cppflags="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"

    AC_MSG_CHECKING([For sufficiently new FreeType (at least 2.0.1)])
    AC_TRY_COMPILE([
#include <freetype/freetype.h>
#include FT_ERRORS_H
]
                ,[(void)1;],:,have_freetype=false)
    if $have_freetype ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi

    CPPFLAGS="$pango_save_cppflags"
  fi
fi
AC_SUBST(FREETYPE_LIBS)
AC_SUBST(FREETYPE_CFLAGS)

## see which freetype we have, 2.0.3 vs. 2.0.4
pango_save_cppflags="$CPPFLAGS"  
CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"
AC_CHECK_HEADER(freetype/internal/tterrors.h, AC_DEFINE(HAVE_FREETYPE_2_0_3))
CPPFLAGS="$pango_save_cppflags"

## Check to see whether we have FT_Get_First_Char(), new in 2.0.9
pango_save_libs=$LIBS
LIBS="$LIBS $FREETYPE_LIBS"
AC_CHECK_FUNCS(FT_Get_First_Char)
LIBS=$pango_save_libs

#
# Check for fontconfig
#
have_fontconfig=false

PKG_CHECK_MODULES(FONTCONFIG, fontconfig >= 1.0.1, have_fontconfig=true, :)

AC_SUBST(FONTCONFIG_LIBS)
AC_SUBST(FONTCONFIG_CFLAGS)

AM_CONDITIONAL(HAVE_FREETYPE, $have_freetype && $have_fontconfig)

#
# Checks for Xft/XRender
#
have_xft=false

PKG_CHECK_MODULES(XFT, xft >= 2.0.0, have_xft=true, :)

AC_SUBST(XFT_LIBS)
AC_SUBST(XFT_CFLAGS)
AM_CONDITIONAL(HAVE_XFT, $have_xft)

#
# Checks for Win32 GDI
#
have_win32=false
WIN32_LIBS=""
WIN32_CFLAGS=""
# The following doesn't work with autoconf-2.13, so we check $host instead
# AC_CHECK_LIB(gdi32, GetTextMetricsA@8, have_win32=true, : )
case "$host" in
  *-*-mingw*|*-*-cygwin*) have_win32=true ;;
esac


if test $have_win32 = true; then
  WIN32_LIBS="-lgdi32"
fi

AC_SUBST(WIN32_LIBS)
AM_CONDITIONAL(HAVE_WIN32, $have_win32) 

#
# We must have some backend defined, in order for the pango-querymodules
# rule in pango/Makefile.am to work correctly. If you are up to writing
# a new Pango backend outside of Pango, you are up to sending the necessary
# patch to fix that rule. :-)
#
if $have_freetype || $have_x || $have_xft || $have_win32  ; then : ; else
  AC_MSG_ERROR([*** Didn't find any of FreeType, X11, or Win32.
*** Must have at least one backend to build Pango.])
fi


PKG_CHECK_MODULES(BASE_DEPENDENCIES, pango >= $PANGO_REQUIRED_VERSION libthai >= $LIBTHAI_REQUIRED_VERSION)

PANGO_MODULE_VERSION=`$PKG_CONFIG --variable=pango_module_version pango`
AC_SUBST(PANGO_MODULE_VERSION)

PANGO_CFLAGS=`$PKG_CONFIG --cflags pango`
PANGO_LIBS=`$PKG_CONFIG --cflags pango`
PANGOX_LIBS=`$PKG_CONFIG --cflags pangox`
PANGOXFT_LIBS=`$PKG_CONFIG --cflags pangoxft`
PANGOFT2_LIBS=`$PKG_CONFIG --cflags pangoft2`

AC_SUBST(PANGO_CFLAGS)
AC_SUBST(PANGO_LIBS)
AC_SUBST(PANGOX_LIBS)
AC_SUBST(PANGOXFT_LIBS)
AC_SUBST(PANGOFT2_LIBS)

LIBTHAI_LIBS="`$PKG_CONFIG --libs libthai`"
LIBTHAI_CFLAGS="`$PKG_CONFIG --cflags libthai`"

AC_SUBST(LIBTHAI_LIBS)
AC_SUBST(LIBTHAI_CFLAGS)

# Honor aclocal flags
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_OUTPUT(
  Makefile 
  src/Makefile
)
